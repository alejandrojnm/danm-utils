---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: policer
  namespace: kube-system
  labels:
      kubernetes.io/cluster-service: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:policer
rules:
- apiGroups:
  - "danm.io"
  resources:
  - danmnets
  - clusternetworks
  - tenantnetworks
  - danmeps
  verbs:
  - get
  - list
- apiGroups:
  - "danm.io"
  resources:
  - danmnetworkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:policer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:policer
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: policer
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: policer
  namespace: kube-system
spec:
  selector:
    matchLabels:
      danm.io: policer
  template:
    metadata:
      labels:
        danm.io: policer
    spec:
      serviceAccountName: policer
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirst
      containers:
        - name: policer
          image: policer
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
                - SYS_ADMIN
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
      tolerations:
       - effect: NoSchedule
         operator: Exists
       - effect: NoExecute
         operator: Exists
      terminationGracePeriodSeconds: 0